snippet rcpc "create pure component" b
// @flow
import React, { PureComponent } from 'react';
import { View } from 'react-native';

type Props = {
};

export default class ${1:ClassName} extends PureComponent<Props> {
  render() {
    return <View />;
  }
}
endsnippet

snippet im "import module" b
import $1 from "$2";
endsnippet

snippet tc "test component" b
// @flow
import React from 'react';
import ShallowRenderer from 'react-test-renderer/shallow';
import TestRenderer from 'react-test-renderer';
import Component, { type Props } from '../Component';

describe('Component', () => {
  let props: Props;
  beforeEach(() => {
    // $FlowExpectedError
    props = {};
  });

  it('renders', () => {
    const renderer = new ShallowRenderer();
    renderer.render(<Component {...props} />);
    expect(renderer.getRenderOutput()).toMatchSnapshot();
  });

  it('renders icon', () => {
    const testInstance = TestRenderer.create(<Component {...props} />);
    const node = testInstance.root.findByProps({
      name: props.icon,
    });
    expect(node).toBeTruthy();
  });
});
endsnippet
